<!-- Focus Panel Main -->
<div class="focus-bg d-flex justify-content-center align-items-center">
  <div class="focus-box position-relative">
    <!-- Bouton X rond custom -->
    <button class="focus-close-btn" onclick="window.location.href='/tasks'" aria-label="Fermer">
      <span aria-hidden="true">&times;</span>
    </button>

    <div class="focus-header d-flex justify-content-between align-items-center mb-4">
      <h5 class="mb-0">Focus Panel</h5>
      <a href="https://open.spotify.com" target="_blank" class="btn-spotify d-flex align-items-center">
        <i class="fab fa-spotify mr-2"></i> Spotify
      </a>
    </div>
    <div class="focus-content text-center">
      <h2 class="mb-4"><%= @task.name %></h2>
      <script>
        const subtasks = <%= raw(@task.subtasks.order(:id).pluck(:name, :time).map { |name, time| { name: name, time: time } }.to_json) %>;
      </script>
      <div class="timer-display" id="focus-timer">00:00:00</div>
      <form method="post" action="<%= statistics_path %>" id="focus-form">
        <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
        <!-- Required Fields -->
        <%= hidden_field_tag :user_id, current_user.id %>
        <%= hidden_field_tag :input_type, "Task" %>
        <%= hidden_field_tag :input_id, @task.id %>

        <!-- Start/End Time -->
        <%= hidden_field_tag :start_time, @task.created_at %>
        <%= hidden_field_tag :end_time, "" %> <!-- will be filled by JS -->

        <!-- Statistic Inputs -->
        <%= hidden_field_tag :input_status, "Completed" %>
        <%= hidden_field_tag :input_rating, 5 %> <!-- static for now -->
        <%= hidden_field_tag :input_performance, "PLACEHOLDER_PERFORMANCE" %> <!-- JS will calculate -->

        <!-- Duration (used by timer JS only) -->
        <%= hidden_field_tag :duration, focus_minutes(@task) %>

        <!-- Subtasks handling -->
        <% @task.subtasks.order(:id).each_with_index do |subtask, index| %>
          <%= hidden_field_tag "subtask_stats[][input_type]", "Subtask" %>
          <%= hidden_field_tag "subtask_stats[][input_id]", subtask.id %>
          <%= hidden_field_tag "subtask_stats[][start_time]", subtask.created_at %>
          <%= hidden_field_tag "subtask_stats[][end_time]", "" %> <!-- Will be filled by JS -->
        <% end %>

        <button type="submit" id="finish-btn" class="btn button-or mt-4 d-none" onclick="finalizeStatistic(); document.getElementById('focus-form').submit();">Register Stats</button>
        <%# <button class="focus-close-btn" onclick="finalizeStatistic(); document.getElementById('focus-form').submit();" aria-label="Fermer"> %>
      </form>
    </div>
  </div>
</div>

<!-- MODAL pop-up (Bootstrap) -->
<div class="modal fade" id="endTaskModal" tabindex="-1" aria-labelledby="endTaskModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content text-center">
      <div class="modal-header">
        <h5 class="modal-title" id="endTaskModalLabel">üéâ Task Completed!</h5>
      </div>
      <div class="modal-body">
        <p>Well done! You have completed "<%= @task.name %>"!</p>
      </div>
    </div>
  </div>
</div>

<%# Subtasks MODAL %>
<% @task.subtasks.order(:id).each_with_index do |subtask, index| %>
  <div class="modal fade" id="subtaskModal<%= index %>" tabindex="-1" aria-labelledby="subtaskModalLabel<%= index %>" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
      <div class="modal-content text-center">
        <div class="modal-header">
          <h5 class="modal-title" id="subtaskModalLabel<%= index %>">‚è±Ô∏è Time to finish the current subtask.</h5>
        </div>
        <div class="modal-body">
          <p>You have completed: "<%= subtask.name %>"</p>
        </div>
      </div>
    </div>
  </div>
<% end %>

<audio id="notification-sound" src="<%= asset_path('end_timer.ogg') %>" preload="auto"></audio>

<script>
  function startFocusTimer() {
    let duration = parseInt(document.querySelector('input[name="duration"]').value || "25", 10) * 60;
    const display = document.getElementById('focus-timer');
    const finishBtn = document.getElementById('finish-btn');
    const form = document.getElementById("focus-form");
    let timerId = null;
    let elapsed = 0;
    const sound = document.getElementById("notification-sound");

    // Set timers for each subtask
    if (typeof subtasks !== "undefined") {
      let cumulative = 0;

      subtasks.forEach((subtask, index) => {
        cumulative += subtask.time * 60;

        setTimeout(() => {
          // Skip sound if it's the last subtask
          if (index < subtasks.length - 1) {
            sound.play();
          }
          const popup = new bootstrap.Modal(document.getElementById(`subtaskModal${index}`));
          popup.show();
        }, cumulative * 1000);
      });
    }

    function finalizeStatistic() {
      const endTimeInput = document.querySelector('input[name="end_time"]');
      const performanceInput = document.querySelector('input[name="input_performance"]');

      const now = new Date().toISOString();
      endTimeInput.value = now;

      const placeholderPerformance = 87; // To be replaced by the actual calculation.
      performanceInput.value = placeholderPerformance;

      document.querySelectorAll('input[name="subtask_stats[][end_time]"]').forEach(input => input.value = now);
    }

    function updateTimer() {
      let h = Math.floor(duration / 3600);
      let m = Math.floor((duration % 3600) / 60);
      let s = duration % 60;
      display.textContent = `${h.toString().padStart(2,'0')}:${m.toString().padStart(2,'0')}:${s.toString().padStart(2,'0')}`;
      if (duration > 0) {
        duration--;
        elapsed++;
        timerId = setTimeout(updateTimer, 1000);
      } else {
        finalizeStatistic();
        finishBtn.classList.remove("d-none");
        sound.play();
        let endModal = new bootstrap.Modal(document.getElementById('endTaskModal'));
        endModal.show();
      }
    }

    if (window.focusPanelTimerId) clearTimeout(window.focusPanelTimerId);
    window.focusPanelTimerId = setTimeout(updateTimer, 0);

    // Send Stats
    // finishBtn.addEventListener("click", () => {
    //   form.submit();
    //   setTimeout(() => {
    //     window.location.href = "/tasks";
    //   }, 500);
    // });
  }

  document.addEventListener("turbo:load", startFocusTimer);
  document.addEventListener("DOMContentLoaded", startFocusTimer);
</script>
